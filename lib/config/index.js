const OPTIONS = {
  INSIGHT_URI: 'INSIGHT_URI',
  LIVENET: 'LIVENET',
  RPC_SERVER_PORT: 'RPC_SERVER_PORT',
  DASHCORE_RPC_PROTOCOL: 'DASHCORE_RPC_PROTOCOL',
  DASHCORE_RPC_USER: 'DASHCORE_RPC_USER',
  DASHCORE_RPC_PASS: 'DASHCORE_RPC_PASS',
  DASHCORE_RPC_HOST: 'DASHCORE_RPC_HOST',
  DASHCORE_RPC_PORT: 'DASHCORE_RPC_PORT',
  DASHCORE_ZMQ_HOST: 'DASHCORE_ZMQ_HOST',
  DASHCORE_ZMQ_PORT: 'DASHCORE_ZMQ_PORT',
};

const DEFAULT_CONFIG = {};

DEFAULT_CONFIG[OPTIONS.INSIGHT_URI] = 'http://127.0.0.1:3001/insight-api-dash';
DEFAULT_CONFIG[OPTIONS.LIVENET] = false;
DEFAULT_CONFIG[OPTIONS.RPC_SERVER_PORT] = 3000;
DEFAULT_CONFIG[OPTIONS.DASHCORE_RPC_PROTOCOL] = 'http';
DEFAULT_CONFIG[OPTIONS.DASHCORE_RPC_USER] = 'dashrpc';
DEFAULT_CONFIG[OPTIONS.DASHCORE_RPC_PASS] = 'password';
DEFAULT_CONFIG[OPTIONS.DASHCORE_RPC_HOST] = '127.0.0.1';
DEFAULT_CONFIG[OPTIONS.DASHCORE_RPC_PORT] = 30002;
DEFAULT_CONFIG[OPTIONS.DASHCORE_ZMQ_HOST] = '127.0.0.1';
DEFAULT_CONFIG[OPTIONS.DASHCORE_ZMQ_PORT] = 30003;

const envConfig = {};
Object
  .keys(OPTIONS)
  .forEach((optionName) => {
    if (process.env[optionName]) {
      envConfig[optionName] = process.env[optionName];
    }
  });

const config = Object.assign({}, DEFAULT_CONFIG, envConfig);

module.exports = {
  insightUri: config[OPTIONS.INSIGHT_URI],
  livenet: Boolean(config[OPTIONS.LIVENET]),
  server: {
    port: config[OPTIONS.RPC_SERVER_PORT],
  },
  dashcore: {
    rpc: {
      protocol: config[OPTIONS.DASHCORE_RPC_PROTOCOL],
      user: config[OPTIONS.DASHCORE_RPC_USER],
      pass: config[OPTIONS.DASHCORE_RPC_PASS],
      host: config[OPTIONS.DASHCORE_RPC_HOST],
      port: config[OPTIONS.DASHCORE_RPC_PORT],
    },
    zmq: {
      host: config[OPTIONS.DASHCORE_ZMQ_HOST],
      port: config[OPTIONS.DASHCORE_ZMQ_PORT],
    },
  },
};
